<?php

/**
 * Implements hook_install()
 */
function spbellen_install() {
}

/**
 * Implements hook_uninstall()
 */
function spbellen_uninstall() {
  // Remove any variables we created.
  //variable_del('');
}

/**
 * Implements hook_schema().
 */
function spbellen_schema() {
  $schema['spbellen_campaign'] = array(
    'description' => 'Campaign settings',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'webform_id' => array(
        'description' => 'The webform id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'disabled' => array(
        'description' => 'Wether the campaign is disabled.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'open_access' => array(
        'description' => 'Wether open sign up is allowed for the campaign.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'campaign_code' => array(
        'description' => 'Campaign code.',
        'type' => 'varchar',
        'length' => '255',
      ),
      'intro_text' => array(
        'description' => 'Campaign caller introduction text.',
        'type' => 'text',
        'size' => 'normal',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(
      'webform_id' => array(
        'webform_id',
      ),
    ),
  );

  $schema['spbellen_campaign_groups'] = array(
    'description' => 'Links campaigns to CiviCRM groups.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'campaign_id' => array(
        'description' => 'The campaign id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'civi_group_id' => array(
        'description' => 'The CiviCRM group id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'group_name' => array(
        'description' => 'The group name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'group_type' => array(
        'description' => 'Either target_group or call_group',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
  );

  $schema['spbellen_targets'] = array(
    'description' => 'Target contacts for campaigns.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'civi_contact_id' => array(
        'description' => 'The CiviCRM contact id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'campaign_id' => array(
        'description' => 'The campaign id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'last_action_id' => array(
        'description' => 'The id of the last call action performed for this target.',
        'type' => 'int',
        'size' => 'big',
      ),
      'attempts' => array(
        'description' => 'Number of calls made.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'occupied' => array(
        'description' => 'Wether the contact is being called.',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'date' => array(
        'description' => 'The moment when the target was occupied.',
        'type' => 'int',
        'size' => 'big',
      ),
      'caller_id' => array(
        'description' => 'The civicrm id of the caller.',
        'type' => 'varchar',
        'length' => '255',
      ),
    ),
    'primary key' => array(
      'id',
    ),
    'unique keys' => array(
      'campaign_target' => array(
        'civi_contact_id',
        'campaign_id',
      ),
    ),
  );

  $schema['spbellen_action'] = array(
    'description' => 'Actions on target contact for campaign.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'target_id' => array(
        'description' => 'The target contact is a campaign.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'caller_id' => array(
        'description' => 'The user id performing te action.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'Unix timestamp.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'result' => array(
        'description' => 'Either not_answered, wrong_number, answered_completed, answered_call_back, answered_blacklist.',
        'type' => 'varchar',
        'length' => 255,
        'not_null' => TRUE,
      ),
      'webform_submission_id' => array(
        'description' => 'The webform submission id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'call_back_time' => array(
        'description' => 'Unix timestamp.',
        'type' => 'int',
        'size' => 'big',
        'not null' => FALSE,
      ),
      'caller_message' => array(
        'description' => 'Message for next caller.',
        'type' => 'text',
        'size' => 'normal',
        'not null' => FALSE,
      )
    ),
    'primary key' => array(
      'id',
    ),
  );

  $schema['spbellen_blacklist'] = array(
    'description' => 'Contacts that should not be called.',
    'fields' => array(
      'civi_contact_id' => array(
        'description' => 'Primary key.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'civi_contact_id',
    ),
  );

  $schema['spbellen_contact_data'] = array(
    'description' => 'Contact data.',
    'fields' => array(
      'contact_id' => array(
        'description' => 'Contact id',
        'type' => 'int',
        'size' => 'big',
      ),
      'phone' => array(
        'description' => 'Contact phone number.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'display_name' => array(
        'description' => 'Display name',
        'type' => 'varchar',
        'length' => 255,
      ),
      'email' => array(
        'description' => 'Email address',
        'type' => 'varchar',
        'length' => 255,
      ),
      'street_address'=> array(
        'description' => 'Street address',
        'type' => 'varchar',
        'length' => 255,
      ),
      'postal_code' => array(
        'description' => 'Postal code',
        'type' => 'varchar',
        'length' => 255,
      ),
      'city' => array(
        'description' => 'City',
        'type' => 'varchar',
        'length' => 255,
      ),
      'gender' => array(
        'description' => 'Gender',
        'type' => 'varchar',
        'length' => 255,
       ),
      'is_lid' => array(
        'description' => 'Membership status',
        'type' => 'int',
        'size' => 'tiny',
      ),
    ),
    'primary key' => array(
      'contact_id',
    ),
  );

  $schema['spbellen_local_access'] = array(
    'description' => 'Local account campaign access.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Local account user id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'campaign_id' => array(
        'description' => 'Campaign id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'hash' => array(
        'description' => 'Hash',
        'type' => 'varchar',
        'length' => '255',
      ),
    ),
    'primary key' => array(
      'id',
    ),
  );

  return $schema;
}

/**
 * Add call again field to {spbellen_action} table.
 */
function spbellen_update_7001() {
  $spec = array(
    'description' => 'Unix timestamp.',
    'type' => 'int',
    'size' => 'big',
    'not null' => FALSE,
  ); 
  db_add_field( 'spbellen_action', 'call_back_time', $spec);
}

/**
 * Add caller message field to {spbellen_action} table.
 */
function spbellen_update_7002() {
  $spec = array(
    'description' => 'Message for next caller.',
    'type' => 'text',
    'size' => 'normal',
    'not null' => FALSE,
  ); 
  db_add_field( 'spbellen_action', 'caller_message', $spec);
}

/**
 * Add intro text field to {spbellen_campaign} table.
 */
function spbellen_update_7003() {
  $spec = array(
    'description' => 'Campaign caller introduction text.',
    'type' => 'text',
    'size' => 'normal',
    'not null' => FALSE,
  ); 
  db_add_field( 'spbellen_campaign', 'intro_text', $spec);
}

/**
 * Add target data to table {spbellen_contact_data} table.
 */
function spbellen_update_7004() {

  $table = array(
    'description' => 'Contact data.',
    'fields' => array(
      'contact_id' => array(
        'description' => 'Contact id',
        'type' => 'int',
        'size' => 'big',
      ),
      'phone' => array(
        'description' => 'Contact phone number.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'display_name' => array(
        'description' => 'Display name',
        'type' => 'varchar',
        'length' => 255,
      ),
      'email' => array(
        'description' => 'Email address',
        'type' => 'varchar',
        'length' => 255,
      ),
      'street_address'=> array(
        'description' => 'Street address',
        'type' => 'varchar',
        'length' => 255,
      ),
      'postal_code' => array(
        'description' => 'Postal code',
        'type' => 'varchar',
        'length' => 255,
      ),
      'city' => array(
        'description' => 'City',
        'type' => 'varchar',
        'length' => 255,
      ),
      'gender' => array(
        'description' => 'Gender',
        'type' => 'varchar',
        'length' => 255,
       ),
      'is_lid' => array(
        'description' => 'Membership status',
        'type' => 'int',
        'size' => 'tiny',
      ),
    ),
    'primary key' => array(
      'contact_id',
    ),
  );
  db_create_table('spbellen_contact_data', $table);
}

/**
 * Add open_access to  {spbellen_campaign} table.
 */
function spbellen_update_7005() {
  $spec = array(
    'description' => 'Wether open sign up is allowed for the campaign.',
    'type' => 'int',
    'size' => 'tiny',
    'default' => 0,
    'not null' => TRUE,
  );
  db_add_field( 'spbellen_campaign', 'open_access', $spec);
}

/**
 * Add campaign code to  {spbellen_campaign} table.
 */
function spbellen_update_7006() {
  $spec = array(
    'description' => 'Campaign code.',
    'type' => 'varchar',
    'length' => '255',
  );
  db_add_field( 'spbellen_campaign', 'campaign_code', $spec);
}


/**
 * Add local {spbellen_local_access} table.
 */
function spbellen_update_7007() {
  $table = array(
    'description' => 'Local account campaign access.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Local account user id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'campaign_id' => array(
        'description' => 'Campaign id.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'hash' => array(
        'description' => 'Hash',
        'type' => 'varchar',
        'length' => '255',
      ),
    ),
    'primary key' => array(
      'id',
    ),
  );
  db_create_table('spbellen_local_access', $table);
}

/**
 * modify caller_id column type from integer to varchar.
 */
function spbellen_update_7008() {
  db_change_field('spbellen_targets', 'caller_id', 'caller_id',
    array(
      'type' => 'varchar',
      'length' => '255',
    )
  );
  db_change_field('spbellen_action', 'caller_id', 'caller_id',
    array(
      'type' => 'varchar',
      'length' => '255',
    )
  );
}

/**
 * Add sync_id {spbellen_targets} table.
 */
function spbellen_update_7009() {
  $spec = array(
    'description' => 'Sync id.',
    'type' => 'int',
    'size' => 'big',
    'not null' => FALSE,
  ); 
  db_add_field( 'spbellen_targets', 'sync_id', $spec);
}
